name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always

jobs:
  # Build using the specified version of Rust
  msrv:
    name: Build with MSRV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Get current MSRV from Cargo.toml
        id: current_msrv
        run: |
          msrv=$(cat testcontainers-rs-modules-community/Cargo.toml | grep rust-version | sed 's/.* = "//; s/"//')
          echo "msrv=$msrv" >> $GITHUB_OUTPUT
      - name: Setup Rust version
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{steps.current_msrv.outputs.msrv}}
      - uses: Swatinem/rust-cache@v2.5.0
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      - name: Build
        run: cargo hack build --feature-powerset --depth 2 --keep-going

  clippy_fmt:
    name: Clippy & Rustfmt check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
          override: true
      - name: Rustfmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@${{ matrix['toolchain'] }}
      - uses: Swatinem/rust-cache@v2.5.0
      - name: Tests
        run: cargo hack test --feature-powerset --depth 2 --keep-going